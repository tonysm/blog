(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{312:function(n){n.exports={data:{tag:{title:"terraform",belongsTo:{edges:[{node:{title:"Declarative Infrastructure and Application Releases",path:"/blog/declarative-infrastructure-and-application-releases",date:"6. July 2019",timeToRead:16,description:"Containers have been in the hype for quite some time now and Orchestrators have enabled us to shift the way we deploy software from task runners to something more declarative way. In this article, we are exploring that and going a bit further by also setting up our infrastructure in a declarative way using HashiCorp's Terraform.",coverImage:null,content:'<p><a href="https://www.docker.com/resources/what-container" target="_blank" rel="nofollow noopener noreferrer">Containers</a> have been in the hype for quite some time now and <a href="https://kubernetes.io/en/" target="_blank" rel="nofollow noopener noreferrer">Orchestrators</a> have enabled us to shift the way we deploy software from task runners to something more declarative way. In this article, we are exploring that and going a bit further by also setting up our infrastructure in a declarative way using HashiCorp\'s <a href="https://www.terraform.io/" target="_blank" rel="nofollow noopener noreferrer">Terraform</a>.</p>\n<h2 id="requirements"><a href="#requirements" aria-hidden="true"><span class="icon icon-link"></span></a>Requirements</h2>\n<p>You will need some tools installed, make sure you have them on your local machine:</p>\n<ul>\n<li><a href="https://docs.docker.com/install/" target="_blank" rel="nofollow noopener noreferrer">Docker</a></li>\n<li>Kubernetes\' <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/" target="_blank" rel="nofollow noopener noreferrer">kubectl</a></li>\n<li>Digital Ocean\'s <a href="https://github.com/digitalocean/doctl#installing-doctl" target="_blank" rel="nofollow noopener noreferrer">doctl</a></li>\n<li>A Digital Ocean account</li>\n</ul>\n<h2 id="containerizing-a-demo-php-application"><a href="#containerizing-a-demo-php-application" aria-hidden="true"><span class="icon icon-link"></span></a>Containerizing a Demo PHP Application</h2>\n<p>First of all, we are going to start from scratch here, so let\'s create the folder that will wrap all of our files:</p>\n<pre class="language-bash"><span class="token function">mkdir</span> php-terraform-kubernetes-example/</pre>\n<p>Great! From now on, we are calling this folder <em>the root path</em>.</p>\n<p>Now, let\'s create the World\'s simplest PHP application. Add a <code class="language-text">index.php</code> file under <code class="language-text">&lt;root&gt;/app/public/</code> and paste the following code:</p>\n<pre class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Simplest PHP APP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello, World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>From host: <span class="token php language-php"><span class="token delimiter important">&lt;?=</span> <span class="token function">gethostname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre>\n<p>Since having PHP installed wasn\'t a requirement, we are going to use Docker to test this application. For that, let\'s create the World\'s worst PHP Dockerfile. Create a <code class="language-text">Dockerfile</code> inside <code class="language-text">&lt;root&gt;/app/</code> with the following content:</p>\n<pre class="language-dockerfile"><span class="token keyword">FROM</span> php<span class="token punctuation">:</span>7.3\n\n<span class="token keyword">WORKDIR</span> /app\n\n<span class="token keyword">COPY</span> . /app\n\n<span class="token keyword">CMD</span> <span class="token punctuation">[</span><span class="token string">"php"</span><span class="token punctuation">,</span> <span class="token string">"-S"</span><span class="token punctuation">,</span> <span class="token string">"0.0.0.0:80"</span><span class="token punctuation">,</span> <span class="token string">"-t"</span><span class="token punctuation">,</span> <span class="token string">"public/"</span><span class="token punctuation">]</span></pre>\n<p>This Dockerfile describes how we want our Docker image to look like. It contains all the steps to create (and recreate) the Docker image for our containers. Let\'s dissect the lines instructions on it:</p>\n<ul>\n<li><code class="language-text">FROM php:7.3</code>: This tells Docker that our application Docker image is based on the official PHP image for the 7.3 version. Official images do not require an organization/username prefix and can be found in the default Docker Registry - <a href="https://hub.docker.com/" target="_blank" rel="nofollow noopener noreferrer">Docker Hub</a>;</li>\n<li><code class="language-text">WORKDIR /app</code>: This sets the path <code class="language-text">/app</code> inside our container as the working directory, which means that any command running inside the container will from this directory as context;</li>\n<li><code class="language-text">COPY . /app</code>: This copies all files from the <em>context</em> path to the <code class="language-text">/app</code> path inside the container;</li>\n<li><code class="language-text">CMD ...</code>: This is the default command that the container will run. We can override this at <em>runtime</em>, but that\'s out of the scope of this article.</li>\n</ul>\n<p>Alright, with that covered, let\'s build our custom Docker image by running the following command:</p>\n<pre class="language-bash">docker build -t tonysm/demo-php-app:0.0.1 -f app/Dockerfile ./app\nSending build context to Docker daemon  3.584kB\nStep 1/4 <span class="token keyword">:</span> FROM php:7.3\n ---<span class="token operator">></span> f0357c41bff5\nStep 2/4 <span class="token keyword">:</span> WORKDIR /app\n ---<span class="token operator">></span> Using cache\n ---<span class="token operator">></span> fac311810559\nStep 3/4 <span class="token keyword">:</span> COPY <span class="token keyword">.</span> /app\n ---<span class="token operator">></span> Using cache\n ---<span class="token operator">></span> 88f78910921e\nStep 4/4 <span class="token keyword">:</span> CMD <span class="token punctuation">[</span><span class="token string">"php"</span>, <span class="token string">"-S"</span>, <span class="token string">"0.0.0.0:80"</span>, <span class="token string">"-t"</span>, <span class="token string">"public/"</span><span class="token punctuation">]</span>\n ---<span class="token operator">></span> Using cache\n ---<span class="token operator">></span> 1165b21c4c06\nSuccessfully built 1165b21c4c06\nSuccessfully tagged tonysm/terraform-k8s-demo-app:0.0.1</pre>\n<p>Here\'s a poor explanation of what is going on here:</p>\n<p><img class="g-image g-image--lazy g-image--loading" src="data:image/svg+xml,%3csvg fill=\'none\' viewBox=\'0 0 757 173\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3e%3cdefs%3e%3cfilter id=\'__svg-blur-11\'%3e%3cfeGaussianBlur in=\'SourceGraphic\' stdDeviation=\'40\'/%3e%3c/filter%3e%3c/defs%3e%3cimage x=\'0\' y=\'0\' filter=\'url(%23__svg-blur-11)\' width=\'757\' height=\'173\' xlink:href=\'data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAPCAYAAABUZ8lnAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAFJklEQVRIx6VXSW9TTRDMz%2bO3IO4IDtwQ4ghiO3BACBAIEBFwgCQs%2bQhJiJXFcWLHTpzFWxZnt7P7dX1V8zzRi2MTO4w0mvG8me6enq7qdpeZoZOuFp3XajUcHh66%2bdHREU5OThAEgVvXHo3qWvNnNfff/Nz/1nk1L0Oj3%2bPPt9Oi%2b/52ly502BoNWVtbw9jYGGZmZlwfHR1FNpvFxMQEkskkVlZXMRWPIzk9jaGhIUxOTmJ5edmNU1NTbl%2bpVHJzreVyOScnzjOZTAbTPJdOp884sBMb/blWrWtxcRErKysoFosoFArY2dlx4yoN11zr%2bXzerVUqlXMRcHx87CJgf38fBwcHboz2gC%2bq%2bNijIWXKrO7tuVeWLH9O4x7XNVcU%2bbOSp3V97yQC/J5qtYrh4eHwIXhHjQk6ORaLOYfPzs6iK5VKIUMPZ/kjRW9vbm6iUL%2bwnDA3N%2bdeQpujDkAkLCOaw%2b6b9/7z58DgYDhXiPv1Vpdp8Wqdhr9eXw6s0u4jOrQqh3O9srvr1uTYy0PA/76oM9zt%2bnXYlSswvWQ7Z6K9BQc1RmJ03tJZGxtAInEWAoHIhy8d9PejRjwGDLsaDQ3q%2bIkSkSMjCWeYGjEafPoEe/8e9uIF7OVL2IcPCH79gjFijNAKiOeAkaP3tHfvYDdvwn7%2bhHFPwNA0coL19SHo7oa9fQujDfbjh5NjDFOnp8EJUdJsthYlTZPtOv/9O%2bzRIwR37yK4ehXBvXswQsEcCS4sAB8/Ao8fA/fvh50O%2bWsjfkgMYTjL0wwvggxkLKC3F%2bBl8fs3iKfzL0DFxBQwPw%2bnW2vKInS8C33yDgYGgDt3gAcPQtn/2Ex2yV7f6FgoMuWACo0cJzmUqChN3C/QqBQNFFPn%2bIqLNLTMyyUYHWnyhYgxt7SEYrmMWbL9PPeU6LA8e46XyeicRiocY7hJ3hyjQHI2iLvC9jYS5JUsmX%2bD%2bCytr2OBkaK%2bSpkZ7sttbSFNOauUsci9MlT8VOZ3cZIyhYg5QfnKFku0R3qUffRdfKXMNMFvs3I2W0k2cZ6XLu4/YHQ4CJRpwDe%2b2hhDLvbnjxPYx7AUEeapcGB8HJPMBEO8/CjT0zYvoMyh70MkNqUxpb4BhvUUXzfO/eqjlNfz9auTJ/Yd5N55Gvgfw3yc%2b/t6epClsfreS/197JLl0h51xXmBJepIcn7Ix5FTlmlPNyEnXf2EkvTGRkYcq2vUWa1LvrcvRjlVkp4c0UOd/dQvXTu8x8V1wLNnYSg/fQo8eQI8fEgKrZzb5ouedlqt7nk/tpWv%2bQC4fTuEidi93ttqhGnUtsaiqqtZhXRqDCHBKgW4cSPEtnB7GQw2sHi0qGl03Dl7PPG%2bfg0jgbGaCu1i5BrzvNEpRhgbH8ZUhRIWxggwRquRSwJGgJPbkLZPK8FWJeI6FRTZKypaxF8kqjIVCjIbxJO%2bC5OqFVQNaq46Qb/FH7sMO9US2uvL22Zp66JS2%2bq1hXOCyFmZh6Rtb97AXr1yI5RRrl2D3boVZo8vX4DPn2Eka2uh6zQCmnk/jLoi4ipTVSGSONL0qAomEYkwrQJKJar2qXTVb11eBCVykhPEFSIrVYudFDLNChpfHDWT4MBEPiEZtPXf4Ewd8C8V12Uu0ylsQiQWMEKSK3JM0rnT7HoM//9jmLCYJvMXCYUUvyl7TRAGqfr/iIM6dzSzoWUEtCo62unNznXqhOg5layCkiCmLCS4KR2rbN9idtD6Fud7hKigqT3a7797wm2m/3/sQ09yvxX1LwAAAABJRU5ErkJggg==\' /%3e%3c/svg%3e" width="757" alt="Explanation of the Docker build command" data-srcset="/assets/static/image-01.82a2fbd.5a1d491.png 480w, /assets/static/image-01.bbab06f.5a1d491.png 757w" data-sizes="(max-width: 757px) 100vw, 757px" data-src="/assets/static/image-01.bbab06f.5a1d491.png"><noscript><img class="g-image g-image--lazy g-image--loaded" src="/assets/static/image-01.bbab06f.5a1d491.png" width="757" alt="Explanation of the Docker build command"></noscript></p>\n<p>Great. Our image was successfully built. You can find your Docker image in your local images with the following command:</p>\n<pre class="language-bash">docker image <span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">grep</span> tonysm/terraform\ntonysm/terraform-k8s-demo-app                  0.0.1                    e522d9fbc93b        5 seconds ago       367MB</pre>\n<p>Nice, let\'s run this image locally to test it out:</p>\n<pre class="language-bash">docker run -p 8000:80 tonysm/terraform-k8s-demo-app:0.0.1</pre>\n<p>No output, which (in this case) means it\'s working. Open <a href="http://localhost:8000" target="_blank" rel="nofollow noopener noreferrer">http://localhost:8000</a> in your browser and you should see something like this:</p>\n<p><img class="g-image g-image--lazy g-image--loading" src="data:image/svg+xml,%3csvg fill=\'none\' viewBox=\'0 0 695 555\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3e%3cdefs%3e%3cfilter id=\'__svg-blur-15\'%3e%3cfeGaussianBlur in=\'SourceGraphic\' stdDeviation=\'40\'/%3e%3c/filter%3e%3c/defs%3e%3cimage x=\'0\' y=\'0\' filter=\'url(%23__svg-blur-15)\' width=\'695\' height=\'555\' xlink:href=\'data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAzCAYAAAAn3w6xAAAACXBIWXMAAAsSAAALEgHS3X78AAAKoklEQVRo3uVaeVBURxp/VVupze4a45ElRpMQLQ/O4RiO4b6iawwCETUmxpvERNcYFiUoXpyikQ1e3BAN962C4VIQxABy3zAIKiLHwMxsNoKI4m%2b/fgPGmNTmj1QOM131q%2b6vu19Pf7/v6H6vhnvw4AFkMhnEYjFaWlrQSmhubv6/aBlHc1MTGhsb0NjQgAYe9aivr0N9XS3qxlFfrwAv19agtrYaNTXVqK6uRFVVBSoJFZXlJF%2bl9RpRUlKArPxI5BTE4Fx2ItIyj%2bFQxAa8/qEKgsLVsOWwHpx2mGGt57sIiY/AvwK34dOjO%2bAZshvxmenIK7qM8xcLkZqbhdisDKTl5iPxq2wkEVKys5GanYP8SwXo7GzD6N1vwT18%2bBBhoaHQ19WFtaUlRMbGsDQ3hwXB3NQU5mZmCplqBtbHZCua%2b6OwUNSWFhb8PDOab0JrioyM%2bLVNfgJmJiYwFRlCT0%2bLIIBQqAMTkTEMDYUwJoiMhDAw0CcI%2bflGrM/YiGpDkkX8bzAYGxkqYEhjBgb8XH1DYwhJ1tbVQ1RkKIbvyMGNjIzAx9sbavPnw5I2vnr1apjTxi1JkYULF%2bF1O1uYU9vG2go2NtbUtxAWpJwh/aARKfVjYGMmpAhbh21MS0MDQj096Ghr821tTU2%2bfhLf9WtCoKUNHYJAU1sha2rRuAKsLdDS4ucr%2bjQVGF9jAppq6jzxVmamUJ2vjh2Gr6HF/hVYz3sZXv7%2baGpvATc8PAxfHx%2begOXLlyMuLg5vvLEEmz/YjB1uHvj4o814d/UauLm64gOXTfj4n9vg5OjAK2nKrEuKPgljYtvW1haOjo5kPRG/mQ3r18POxgaa6urQFQh4Mn4JMGJM6TcNhPrQUFPjvXaRrQ1eXaABP9PZuLtqDpaovYI9vv64QmHJDQ0N8QQI6GEzmmxlZcUrIKJFGJhCzIqGxCTr19HRIfczgL6%2b/iMIhcLvyQroQY/Cio2xTf2a4K1PRBvQPpisRbIB7UOPvNBMVxsaGtrw9nZDXXMZuDt37sDP15dXjFmUWZYpOkECc2lmTRuyHuv7/OhRZFFCyTz/Fc5TQsnOzcW5rCy%2b/VVOLj/G2ucp4TCZIScvn5A3jvxfEHm0nzxcKCiENxlVSAQ4OTnB2dmZ3zvvseYW0CcivLx3o6WtfJwAPz9okwe4u7tj5cqVvIUdHBxgb2/Pk8D616xZg7dXrcK9B2Noam2HRCpHS6uYToUWFJWUorGpDbX1DWjv6MKtvn5cu9EF%2bdAIfqsi/%2b%2b3vDfHxsYiMzOTNyzLXyx8dQRC7D%2bwCsVl6xUEsCSoqqrKuztzXzWKHV1yXxYW6uRKLOnxMsVuRFQU8i4UoOjyZeRfLOAZz8m/qGiTFS4WFqGw%2bDIKi4qJmCu4UlaGK6W/Hkq%2bLsXVyiocPnIE8ymvLV26lDcm04N5uZBOkHlzNbFpy2zEn1MHJ5fLceL4cWIqDhkZGUhPTyOkIykpCWlp6UhNTeETI5MTExMRExOD1JQUXk5OTkYKtRmSUxRt1pc8PjbxzG8BZnm2B1YzpIzvOS0tFZGRp7BzlxXC4gTgJAMDiPnyS9wfHcXdu3cxNDQMuhrw5cH9UfwRy9CdUez0NManh58B1y/pRwIxVlNZBq/9e%2bG53wfZlLh42esAgsMiUFxczHvHubMZyC8owj0ia2xsDOwW%2bTTh/v37PAGSPimcN2rDbuNfwfVJJIiPT0BrUz2iIsJxIiScz%2bxN9TWIiIhAwEE/hEVEIS4hEckJ5EoZmfwi7Ab5tIEZjRXpgBxOa/Xhsu8F8gAKgS%2b%2biAa7D4yNPeRZYmyxMkqWVjw89qjvAY2zEGGLPVp4vJ4g5vdaJggYHJDB2cUCb%2b0UKAiIjo7mlf255fes/PcIkAzi3S3LsMnHXhECp06dIlYGcOtWF/roDGcng1QmxzfffAOpVMrXfT3d6Lx%2bA719fbzc1XUTvb296OvvQ0%2bPou9p8YAByQDWb3sbG73swPWSAuxo6%2bzsRM75DJw%2bHYOioiKknTmLjDNnUFr6NQrpbC%2b5RK%2bViUlIP5uFMjrb05IT6YhMQx29BqekpqOhsfF7P/J7JkDSL8VWj8X4d8IKBQHR0VFgb4UTkx6P7Setqhh7ukOgr3cAHt4rEJvpznLAIE8AuwP8RITj4RPKPvyR5Pc0hEB/rwTuPu8j9Mx%2bcNeut/FJcIKAn3PMPC0EyAZlsHrHGgtdTcEVfZ2LcDrvHyfgj1q%2bS4LsFHBGWKIfuOLSIoSGhmJEiQgYlEjh5GKHlbttwVVUleNkcPCjJKgMBMgH5RCt0MectdPIA/IDcTzIDyP3RpWGACl5wJsui7E2wAlc5dVsHA0KwD0lImCwfwCOH67Akr2O4No7ryMiMlK5kmC/BO9tfx87gnaBu93bg6ioKKUiQDoghcP6JRCt01QQEBkVqWQEyLBopQjCt18D191zG5FKFgL9/YP4aNsibPWki9DN27eVLgf098vwqbslwsK0wd3o7lY6AiQSGTZvFWGv79QJAiKUzAOk8PCwxC5vVXDXu28p3btAT88gYiNcEH6CToHOLuUjoLu7B0lxQRiR5YDruNmFMCJAmV6Gbt/uw5che9BwJZpugjdvIiw8XKkIuNXdh/igzTj7uZ2CgFAlI4B5QNzx7Sg57QxOfOOGEhLQi4QvPoOkPRFc2/XrCA0LUyoCenr6ceLYJ%2bhqdAPX2tmJECUjQCb7D6ztNGFp%2byy4pmsdCA5VMgKkcji8ZYEX508G19DegZPsm%2bCIEn0THJRh08aFeFnjOXB14nacCAlVqm%2bCEokU69bb4nVHeh2uaWvHcSUjQC6TQ89cB7P0p4GrbhUTASFKR4CupR64mc%2bAq2ppw7FgJSOAkqCutT7%2bpPpncBXNLURAMO4pGwG2QjyjOQnc1aY2HD15EneHhx9N%2bqNi4l8u7KOojp0eJlupkAfUV%2bJYSBSzPZSlDN8ZhvFSEV52nAMuM3kVjgW6oam5A%2b1iMdpaW9DW1vYDiH9tiGk/dEcRizvR2tqGa%2b3X0EGXtg7q4%2bvH24/1dXYowNrsmXYxqyfmXcNNevepq6qF/puGUH9PC1xOnBaOH7KFq6s9/AOD4BN4DAcOHyEE4sChQOwn7As4gj0Bnylw8DN4HjyM3f6Hscv/EDz8DsHdN4DHTp8AuHkHwNX7ID7xOghXL1b7Y/sBf3y834/Htn2%2b2LrXF1sIH%2b7xwQee3%2bH93d5U09iefXBeJ4DTO1Pg5vY3eOw2webtlrBeNgcLV6phgflMLLCcgdmiGXhJ9wXCVMw1m4ZZVP9lxnOYMvd5zNKZDoHVS9CyVMEcw%2blQNVDBszQ2ec50PK%2bmgumimZjlNJdC4KwJSrLW4Uy8PdKSNqCougIlTWIU1bfgUn0rCgkFdS24UNtMaEJ%2bTRPyqhqRQzhf2YDMinqcvVqPM%2bV1SC%2brRWppLZKu1CCxpBoJhPjLVYgrrkRMUSViqT59qQLRBVcRebEc4RfKEZpfhpBxBOeV4mRuKQJjT2OHtxF8jkxFXZkZysuPwNZlHiw3zIbpxtlQd5iBeUtVoLNqJrSWTcXsRZOwwGkyBMunYareZEwSTMKr1i9gwT9UoLl4GoTLXsQU4fOYavJ3TDGegWlmr%2bKVxXNhsGUR/gfpc1VaZpnuYwAAAABJRU5ErkJggg==\' /%3e%3c/svg%3e" width="695" alt="Application running locally" data-srcset="/assets/static/image-02.82a2fbd.a7ef42d.png 480w, /assets/static/image-02.b306fc5.a7ef42d.png 695w" data-sizes="(max-width: 695px) 100vw, 695px" data-src="/assets/static/image-02.b306fc5.a7ef42d.png"><noscript><img class="g-image g-image--lazy g-image--loaded" src="/assets/static/image-02.b306fc5.a7ef42d.png" width="695" alt="Application running locally"></noscript></p>\n<p>Great! Now, let\'s push this image to Docker Hub. You need to create an account there, so go ahead, I\'ll wait.</p>\n<p>Now that you have an account in Docker Hub, you also need to authenticate you local Docker CLI running <code class="language-text">docker login</code> and typing your credentials there. After that, we can now push our image to Docker Hub with:</p>\n<pre class="language-bash">docker push tonysm/terraform-k8s-demo-app:0.0.1\nThe push refers to repository <span class="token punctuation">[</span>docker.io/tonysm/terraform-k8s-demo-app<span class="token punctuation">]</span>\n0e017f123496: Pushed \n5bcce6289196: Pushed \n5e63a0adbe83: Mounted from tonysm/dummy-php-image \n82c280d40dc6: Mounted from tonysm/dummy-php-image \n07886e8b1870: Mounted from tonysm/dummy-php-image \ne01f9f2bc3a7: Mounted from tonysm/dummy-php-image \n4625f667b473: Mounted from tonysm/dummy-php-image \n0318b3b010ef: Mounted from tonysm/dummy-php-image \nd7b30b215a88: Mounted from tonysm/dummy-php-image \n9717e52dd7bd: Mounted from tonysm/dummy-php-image \ncf5b3c6798f7: Mounted from tonysm/dummy-php-image \n0.0.1: digest: sha256:27f939f99c2d57ca690a5afdc8de2afe0552b851d0c38213603addd1f6bba323 size: 2616</pre>\n<p>In my case, some of the steps were already present in another image in my user account, so Docker knows that and doesn\'t have to push the same layers again. If you open your profile on Docker Hub, the image will be there, <strong>publicly available to anyone</strong>:</p>\n<p><img class="g-image g-image--lazy g-image--loading" src="data:image/svg+xml,%3csvg fill=\'none\' viewBox=\'0 0 1312 880\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3e%3cdefs%3e%3cfilter id=\'__svg-blur-24\'%3e%3cfeGaussianBlur in=\'SourceGraphic\' stdDeviation=\'40\'/%3e%3c/filter%3e%3c/defs%3e%3cimage x=\'0\' y=\'0\' filter=\'url(%23__svg-blur-24)\' width=\'1312\' height=\'880\' xlink:href=\'data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAArCAYAAADIWo5HAAAACXBIWXMAAAsSAAALEgHS3X78AAAMq0lEQVRo3t1aCVRURxbtM5PJnMyZ5SQz0WQymSWC4JLRiMG9xSXqRHQ0RnGJUZOo0Whck6gnGncWEVEUFNkXlwEEVNAhGlFjEhRUGppmk1XZoVca6IU7r%2br/BuygAVwzfc4971X99%2btX3f/qvVcfJFqtFokJCYiLjUXsiRM4ERMjgPRYK8THxXHExcWSPImjRwLg5f0eDge4ITrqONy9NmD1l3Pg6%2b%2bJgOBgHDsWiW0es7Dk8wFYscERmz0WYN3W97Bu01REHjmGoBA/rN04FQGH1yDy6DEER0QgMCwc/qFh8AsKQcTRSJyKjxefGytI1rYGXYuNPo4YQuyJaASFBsM3MBDb9x/Euj2%2bWOaxHx%2b77sNSt31YvNMbM7fswZSv9uDD8DOQZMnlGOjggH4Ojhg5ciTGjB6NsWPGkBwDqVQKJ4aRTpCOGIEBAwbAgdDLzg79%2bvaFzWuvoaeNHWx72JLeg6QNtW1J9oCdjS2/bmdrj162vWBPsCNbe1s7Lm17vMbtevXsjZ49WtsW9BQlG6Oz6Cneb2cjwN7GBn3YnHv3Qt/%2bAzD/jX9g/Zt/g/MOP0gyMzIwdNhwOAyRYuy4CZjoPBlvT5wE58n/xoyZszB9xkzMnD0HLrNm876JkyZj3PgJcHaeBCen0YRRcBo1uhWWdltJkBK5HFJRMlIZrNtWGNkFtDfOCHrOwIFvYsDgYZjk2B9zB/fFvF2HIMmQyTDeaRgmvyWFlC6MGe6ICU5D4bFtE8pKCpCXJUOuXAbFzWvISEuBLPUHKGTXkUMoyJbjTlE%2bSgtyReShRJSlhbkouZWD20V5KCapqa2ETlkFbRehawPtPXQLNHUCtKKuU1WjtuI2Pl38AZYvnI%2bRwwehT7/%2b8AwMJQ/IlKP3tNV4ZdpG/H3aeti6bISNy5eQrvLFx4cv4iO/c5h/4GvM2/815hPm%2bSQJuti3wJddP4cFhA98z3MsECWH33luu/DQBRovGUu6iMX%2byVgkgo3TVrdcWyy2lwcKsNy7NOAiFh08h0GL3OG40A22Mzdi7pI18AqJgEQmz0a3HQo4HDWjm289nvOux2/21uOXu5SQbK2AZEsFXthThb/ur8ZL%2b6rxZx8CyZf3VZGswkt7BfmyqHff29r/oreAbqS/4FVJY5VD8lUXsZWwg%2baznbC5XJAWfVuFcI1snnWrwK8Z3CvQzbsSf9pTie7eDFV43keLF3w0eN6vCXvOKhAadQSSazIF%2bu5Kx4GbRvQLrIO9vxKvByrR3UeJF/ap8AsPJWwPqyE9osGbYRoMjtBgULgghxIcSR8i9rH2QLIZGim0%2bwSpOfoS7APUkLgRqTvqINlZJ8iOgNlur8PvvFWw8VfjjzQn1veqnxov7VfxMZ/zUuIvvmq86KPic36GXt6znkr8M5jmEKhBf5KvB2nwK49aPONRgz/sVWN9xBVs9f4CEnlWNob7ZMIhXA/HUBWGhKs5BotyKEEaqYYTETDqqIbLtrp1X9t%2bawyLEMbrNCKEuQwKo3mFCX1sfkwfIkp%2bjXT2nEnRWkyM1mDCf%2b6GczS7RnM5rofv6WtY9Nk0SLKzsynYFUL4NaP9X3MXgfu0n9RPeHZmejomLpQKBNwqKOCdRpMZJnMzTM3NMBOY3vwYpmM2C897WGhuB9bUp6beoMJsukBAYaHoAWzRzYJpc7OZd%2bkbGnC7rAxlFZUor6xGWXkFtctRUnqby%2bqaGuQXFPF2Odkwu9I7ZcjOzYNGq0NBURGKSuhaZRWUShXZ13I7tUYDXX0D9I2N4qObHw3EsRubDDAYjWhsbOLPS7%2bZDq990%2b/2AIXSCJ%2bMRlwqN8EkMqXWaPF9SgquX0/DhYuX8O33VAvIFUi9cRPXZXLcoDoihdhMuZaKjCwFrqbdRArhPNlmKnLonstIvvID9d/A9XQZLn2XglNnksg2G5U1SijVmhYCHrp3Wd48yeI7FahTqVFRXYsmgxE3af7bPCZQKawQYkA0cTDxtAbvnm/A1LNabDpXCiPdbzIYoNQ2oKweKFWb0UQuoqKBaultanU66PV6qGkRWl09f6vmDizEerGPYvE/NfYNRoDbCCqE6E1oKoqw9LyB8mkdRdRy/H7lSXRfGcMNDU2NqKxV4bbGjDsEnb6RuzGDkojQ0GGqtk4JlVqNyqpqNIguZjab%2bcOZtOh37cd22o/SAywwi1s7Le063F1HsTSoQPXtQvjeaOIESNakQzL1ICbuvfhQWX%2bcC7/fvCzPu3r1KtzdXSBRKBQ8COqNZuy5XA4HbxmWhKUgv0rbkhmYB5RVK1Feo0Ij7R8hSN4bj3thXSEgLS2NguBKRgBlgQIhC5iMBlSqaF8bTC03sT3N3F6j03MwQp7WBXaWgIRTxxkBchSIWYDl47uMf8Kdf84EpKamIvlCEiS7g3YQAbdEC3NLudDW%2bEnv3UflAZcvnqcD1N4vOQGsW9Vggq6pGfWGVsMmSoOsiHhkhcoTgCULXGIesPXAehTcyuUE5NUacUtpQpHK3MIarwQrqjqU338mftBCwOXkc5DM2SCFjGqBmgagUtOEKq0BFRoKhiSNVDqaTEIeNxpNvP1k8PCebeBZjMWANHx7ORmSVa7vIl2WAV2jGTWqetSq9RwqjR56qtXrdQx61DP9CUHfts3mohPmprfq69B4ZGdoMiKFyvtvWQzw8NuCbEqF1kHwp3L94wQ7wDAvaBt4WcayZKr2AvX9AWRkZCApKRGStW4rcSuvoLV8fcDT%2bqPIDk2NBr4VC4uKkZ6ZhZz8AjqBFiInN59OnYS8fLBPe0WldzgxRhMd5n4EM5dmkYDbpaX49EAYJF6HtyOLqsG29fuDRFc2Rq1SzbPHwzjmthJgemiEMpJKiovh4hkEyU5/Tyjo2NqWgM7m1LYTZhNVa3U84FgvBFa1RUfGZ9ZsCzD93JVUBBw/jdATZxESfYbkGYQxPeZMC4KjEulaIoJFMD0oKgFHT55DZFwSFPlFfPxi8iaX3cGQuAW5oiCvsMMEtLfwrhLWIQLEGMDk8s3ekLosw/h5qzFs%2blKMnbsSjlMX4a33V2Pc%2b6sw5r2VGDNnBUbNXkHt1Rg1aznGzVuD4WTr/NEXmDB/DSLjk/j4RXT%2bmbk7BJIZq6ZAYbUFOrvX75SX8z15i5BL%2bzOX9mRRcQnfnzfSZSguLet0jGjPA6ISL2Cnbzh2BxyD5%2bGj2EVwPxQJT2qzPtbm/f6tcheXR7iNx6EjuC7PFT2gCLO9iID3V7sgUy7vkgewYMO%2brugbGvkHEV29nkuLzj6JCXqD%2bEnK1GkPsMQAS/5%2bGD8WEEtLSjCLETB3xSTygKxOB0GhTDZCyxZNC2QnRXZqZHo9EcLA9AaavE7fADURoW9o6nRgFAhoQgONx1KhicDyOGt3FQY67TIC%2bBZwfKcP5KIHWD6EPm2/JvIe9nLYV6eKqmr%2bFerBDkVAabFIwPRlcyCTpQufvwzGdvLn/cHfikl4M9bS2J7eBTSS5zACKior%2bRfoqpqals9tnf9K3MzTICPAZXcoJFM/%2bRDp6TdhNjZDp60XS9%2bnC6zkNZnND1x8tWQhkYAZzAM%2b2byZCJDxKpjVyQ20j582MAJ46srJxXenT3G9qroGlZVVPAZ1Jq60JeCdXUTAii3rIc9UwGxqvuuQ8TSBzYv9/ns2CZ6uO1FHsaC2tg53ysp5hml5uxz3/ktda7XKYkAx5ngchOSjdVORo8ijfWp%2bKj3AQgLb70paeHVtTUuZ/SBboKS4FCcjN5IHbO%2bHvOwcClJPHwF6Sp8tJJBk6c9oEIJii4eINp0Zk6VBVghdSdwLyTbfWcil4/DT6AGWRTZYbYcH3VKMyGLygORT3pCExgQik2IAY1bIAvr/e7DKspiCYHTQWiIgLh4F%2beKfxw0m7gmdgZnB1E6fiNZ2c4stC7jW4PWD0WzVZ20LUZpb5Y/GNLf2t1xrtWdjsoCopFpi07opkER9fQEXvklGHh1csuQKKLKyO4WsLEUH7yO7rFw6d%2bSRfRZVn%2bweOfe%2bLHkm8nLykU3HcgXrp%2bvs/xd5m4%2bfxZ/B7OSZchpHfK415He3FfewycnOxeXLV/DhZwsg%2bSYjGxGJSQiJT0BofCJHWFvEUV9cAkdIbAKCTpxGQMwp%2bEefxKEoAax94Hg8vCJj4R5%2bAq5hMdgeEoPNQdHYGBiFDQHH8bl/FLYEBWGD60Bs2NQNy9a%2birmr38CWPf3hdfBf%2bHTLcixwO4il%2b49h7sYv0Gt8H/R%2bexB6SO3xW/sX8cq4nhiyUArpJ%2b9iylYfTPEIxyQRzu4CJriFYyxhNJPUHkPSyTWsBSN2hmL4zhAM2xmMYazPLwH/AyOjO29Amy9FAAAAAElFTkSuQmCC\' /%3e%3c/svg%3e" width="1312" alt="Image is public in Docker Hub" data-srcset="/assets/static/image-03.82a2fbd.a919ad9.png 480w, /assets/static/image-03.cbab2cf.a919ad9.png 1024w" data-sizes="(max-width: 1312px) 100vw, 1312px" data-src="/assets/static/image-03.cbab2cf.a919ad9.png"><noscript><img class="g-image g-image--lazy g-image--loaded" src="/assets/static/image-03.cbab2cf.a919ad9.png" width="1312" alt="Image is public in Docker Hub"></noscript></p>\n<p>Great. Now, let\'s create our Kubernetes Cluster.</p>\n<h2 id="terraforming-our-infrastructure-on-digitalocean"><a href="#terraforming-our-infrastructure-on-digitalocean" aria-hidden="true"><span class="icon icon-link"></span></a>Terraforming our Infrastructure on DigitalOcean</h2>\n<p>Since we are using DigitalOcean, we could go to their Dashboard and spin up a Kubernetes Cluster from there. But, let\'s make it more interesting by using Terraform to do that for us. It will build the Kubernetes Cluster for us and later we can deploy our application to it.</p>\n<p>Let\'s start by creating the folder <code class="language-text">&lt;root&gt;/provision/</code> in our app (<code class="language-text">mkdir provision/</code>). Terraform doesn\'t require any file naming convention, it will load any file ending with <code class="language-text">*.tf</code> in our folder, so let\'s create a <code class="language-text">main.tf</code> file with the following content:</p>\n<pre class="language-terraform">provider "digitalocean" {\n  token = var.do-token\n}\n\n// Kubernetes cluster with 3 nodes.\nresource "digitalocean_kubernetes_cluster" "terraform-k8s-demo-app" {\n  name    = "terraform-k8s-demo-app"\n  region  = "nyc1"\n  version = "1.14.2-do.0"\n\n  node_pool {\n    name       = "terraform-k8s-demo-app-pool"\n    size       = "s-2vcpu-2gb"\n    node_count = 1\n  }\n}</pre>\n<p>I\'m not going over line-by-line on what is going on here, just know that we are telling Terraform that we are using the digitalocean provider, and that gives us some resource types we can use, one of them is the <em>digitalocean_kubernetes_cluster</em> that creates the cluster for us with, in this case, 1 node (see the <code class="language-text">node_count</code> definition). If you want to learn more, <a href="https://www.terraform.io/intro/index.html" target="_blank" rel="nofollow noopener noreferrer">the documentation</a> is a wonderful place.</p>\n<p>This file requires the existing of a variable, the <code class="language-text">var.do-token</code>, let\'s create a <code class="language-text">variables.tf</code> file:</p>\n<pre class="language-terraform">variable "do-token" {\n  default = "(YOUR DIGITAL OCEAN TOKEN)"\n}</pre>\n<p>Make sure this file is ignored on Git, you do not want to share your Digital Ocean token. Now, let\'s initialize our Terraform client:</p>\n<pre class="language-bash"><span class="token function">cd</span> provision/\nterraform init\n\nInitializing the backend<span class="token punctuation">..</span>.\n\nInitializing provider plugins<span class="token punctuation">..</span>.\n\nThe following providers <span class="token keyword">do</span> not have any version constraints <span class="token keyword">in</span> configuration,\nso the latest version was installed.\n\nTo prevent automatic upgrades to new major versions that may contain breaking\nchanges, it is recommended to add version <span class="token operator">=</span> <span class="token string">"..."</span> constraints to the\ncorresponding provider blocks <span class="token keyword">in</span> configuration, with the constraint strings\nsuggested below.\n\n* provider.digitalocean: version <span class="token operator">=</span> <span class="token string">"~> 1.4"</span>\n\nTerraform has been successfully initialized<span class="token operator">!</span>\n\nYou may now begin working with Terraform. Try running <span class="token string">"terraform plan"</span> to see\nany changes that are required <span class="token keyword">for</span> your infrastructure. All Terraform commands\nshould now work.\n\nIf you ever <span class="token keyword">set</span> or change modules or backend configuration <span class="token keyword">for</span> Terraform,\nrerun this <span class="token function">command</span> to reinitialize your working directory. If you forget, other\ncommands will detect it and remind you to <span class="token keyword">do</span> so <span class="token keyword">if</span> necessary.</pre>\n<p>Great. Now, let\'s use Terraform to make a plan of action to build the infrastructure:</p>\n<pre class="language-bash">terraform plan -out /tmp/plan\n\nRefreshing Terraform state in-memory prior to plan<span class="token punctuation">..</span>.\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n  <span class="token comment"># digitalocean_kubernetes_cluster.terraform-k8s-demo-app will be created</span>\n  + resource <span class="token string">"digitalocean_kubernetes_cluster"</span> <span class="token string">"terraform-k8s-demo-app"</span> <span class="token punctuation">{</span>\n      + cluster_subnet <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + created_at     <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + endpoint       <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + <span class="token function">id</span>             <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + ipv4_address   <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + kube_config    <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + name           <span class="token operator">=</span> <span class="token string">"terraform-k8s-demo-app"</span>\n      + region         <span class="token operator">=</span> <span class="token string">"nyc1"</span>\n      + service_subnet <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + status         <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + updated_at     <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n      + version        <span class="token operator">=</span> <span class="token string">"1.14.2-do.0"</span>\n\n      + node_pool <span class="token punctuation">{</span>\n          + <span class="token function">id</span>         <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n          + name       <span class="token operator">=</span> <span class="token string">"terraform-k8s-demo-app-pool"</span>\n          + node_count <span class="token operator">=</span> 1\n          + nodes      <span class="token operator">=</span> <span class="token punctuation">(</span>known after apply<span class="token punctuation">)</span>\n          + size       <span class="token operator">=</span> <span class="token string">"s-2vcpu-2gb"</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\nPlan: 1 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nThis plan was saved to: /tmp/plan\n\nTo perform exactly these actions, run the following <span class="token function">command</span> to apply:\n    terraform apply <span class="token string">"/tmp/plan"</span></pre>\n<p>Terraform gives us what it <em>plans</em> to do in our infrastructure. It\'s our job to validate if everything looks ok. For this example, I think it\'s fine, let\'s apply this plan:</p>\n<pre class="language-bash">terraform apply /tmp/plan\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Creating<span class="token punctuation">..</span>.\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>10s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>20s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>30s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>40s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>50s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>1m0s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>1m10s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>1m20s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>1m30s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>1m40s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>1m50s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>2m0s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>2m10s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>2m20s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>2m30s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>2m40s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>2m50s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>3m0s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>3m10s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>3m20s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>3m30s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>3m40s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>3m50s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>4m0s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>4m10s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>4m20s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>4m30s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Still creating<span class="token punctuation">..</span>. <span class="token punctuation">[</span>4m40s elapsed<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Creation complete after 4m44s <span class="token punctuation">[</span>id<span class="token operator">=</span>81ee8486-51cb-48da-811c-14d6b3346f7d<span class="token punctuation">]</span>\n\nApply complete<span class="token operator">!</span> Resources: 1 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the <span class="token variable"><span class="token variable">`</span>terraform show<span class="token variable">`</span></span> command.\n\nState path: terraform.tfstate</pre>\n<p>Great. This means our Kubernetes cluster was successfully created on Digital Ocean. You can open up your Dashboard and see the cluster as well as the nodes, but let\'s use the <code class="language-text">doctl</code> CLI tool for that. To start, you need to authenticate with your Digital Ocean token:</p>\n<pre class="language-bash">doctl auth init</pre>\n<p>And paste your Digital Ocean token. Now, let\'s list our Kubernetes:</p>\n<pre class="language-bash">doctl kubernetes cluster list\nID                                      Name                      Region    Version        Auto Upgrade    Status     Node Pools\n81ee8486-51cb-48da-811c-14d6b3346f7d    terraform-k8s-demo-app    nyc1      1.14.2-do.0    <span class="token boolean">false</span>           running    terraform-k8s-demo-app-pool</pre>\n<p>Nice. Let\'s connect our local <code class="language-text">kubectl</code> to that remote cluster:</p>\n<pre class="language-bash">doctl kubernetes cluster kubeconfig save 81ee8486-51cb-48da-811c-14d6b3346f7d\nNotice: adding cluster credentials to kubeconfig <span class="token function">file</span> found <span class="token keyword">in</span> <span class="token string">"/home/tony/.kube/config"</span>\nNotice: setting current-context to do-nyc1-terraform-k8s-demo-app</pre>\n<p>From now on we are doing any command we run with <code class="language-text">kubectl</code> in our cluster, like:</p>\n<pre class="language-bash">kubectl cluster-info\nKubernetes master is running at https://81ee8486-51cb-48da-811c-14d6b3346f7d.k8s.ondigitalocean.com\nCoreDNS is running at https://81ee8486-51cb-48da-811c-14d6b3346f7d.k8s.ondigitalocean.com/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use <span class="token string">\'kubectl cluster-info dump\'</span><span class="token keyword">.</span></pre>\n<p>Cool. Now, let\'s deploy our application on this Kubernetes Cluster.</p>\n<h2 id="deploying-our-demo-php-application-on-kubernetes"><a href="#deploying-our-demo-php-application-on-kubernetes" aria-hidden="true"><span class="icon icon-link"></span></a>Deploying our Demo PHP Application on Kubernetes</h2>\n<p>We already have our image on Docker Hub (our registry), so we only have to create our Kubernetes Objects\' manifests. If you are new to Kubernetes, I did an attempt to explain what these are in this <a href="https://madewithlove.be/kubernetes-101-the-basics/" target="_blank" rel="nofollow noopener noreferrer">blogpost</a>, but also check the <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/" target="_blank" rel="nofollow noopener noreferrer">docs</a>.</p>\n<p>For our application, we will need:</p>\n<ul>\n<li>A deployment object for the web (our application);</li>\n<li>A service object to represent load balance requests to our webapp PODs.</li>\n</ul>\n<p>Now, create the folder <code class="language-text">&lt;root&gt;/k8s/</code>, there you can create the file <code class="language-text">webapp.yml</code> with the following contents:</p>\n<pre class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app</span><span class="token punctuation">:</span> webapp<span class="token punctuation">-</span>web\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> webapp<span class="token punctuation">-</span>web<span class="token punctuation">-</span>deployment\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>\n  <span class="token key atrule">selector</span><span class="token punctuation">:</span>\n    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>\n      <span class="token key atrule">app</span><span class="token punctuation">:</span> webapp<span class="token punctuation">-</span>web\n  <span class="token key atrule">template</span><span class="token punctuation">:</span>\n    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n      <span class="token key atrule">labels</span><span class="token punctuation">:</span>\n        <span class="token key atrule">app</span><span class="token punctuation">:</span> webapp<span class="token punctuation">-</span>web\n    <span class="token key atrule">spec</span><span class="token punctuation">:</span>\n      <span class="token key atrule">containers</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> tonysm/terraform<span class="token punctuation">-</span>k8s<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>app<span class="token punctuation">:</span>0.0.1\n          <span class="token key atrule">name</span><span class="token punctuation">:</span> webapp<span class="token punctuation">-</span>web<span class="token punctuation">-</span>deployment\n          <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>\n              <span class="token key atrule">name</span><span class="token punctuation">:</span> http\n<span class="token punctuation">---</span>\n<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1\n<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service\n<span class="token key atrule">metadata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> webapp\n<span class="token key atrule">spec</span><span class="token punctuation">:</span>\n  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer\n  <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>\n      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> http\n  <span class="token key atrule">selector</span><span class="token punctuation">:</span>\n    <span class="token key atrule">app</span><span class="token punctuation">:</span> webapp<span class="token punctuation">-</span>web</pre>\n<p>Let\'s take the time to talk about what we have here. This file contains 2 Kubernetes Objects separated by the triple dashes (---). First one is a Deployment Object. This is typically the type of object you use on your applications. With this kind of object, Kubernetes handles the rollout of new images (you can control the deploy strategy, but by default it is RollingUpdate, which will terminate existing PODs while creating the new ones whenever you <em>apply</em> a new image. The important pieces are:</p>\n<ul>\n<li><code class="language-text">.spec.replicas: 2</code>: tells we want 2 PODs running;</li>\n<li><code class="language-text">.spec.selector.matchLabels.app: webapp-web</code>: is what this deployment will use to "watch" how many PODs are running, so Kubernetes can control the desired amount of PODs for us;</li>\n<li><code class="language-text">.spec.template</code>: is the the template that will be used to create the PODs. You can think of it as a POD object definiton (I\'m not sure if they call it that, but it\'s easier for me to think like that);</li>\n<li><code class="language-text">.spec.template.metadata.labels.app: webapp-web</code>: is very important! This is what the deployment uses in the matchLabels defition above. The deployment use the label in this template to match with the selector to make sure it has the desired amount of running PODs for this deployment in our Cluster. This is also used when we scale down or up our PODs;</li>\n<li><code class="language-text">.spec.template.spec.containers[0].image: tonysm/terraform-k8s-demo-app:0.0.1</code>: is the container image used by this POD (techinically we can have more than one container for a single POD, but that\'s rarely needed, tbh);</li>\n<li><code class="language-text">.spec.template.spec.containers[0].ports[0].containerPort: 80</code>: is the port this container is expecting requests;</li>\n<li><code class="language-text">.spec.template.spec.containers[0].ports[0].name: http</code>: is an alias for this port, we are using it later to reference this port instead of the number.</li>\n</ul>\n<p>Alright, let\'s cover the service portion now. Services in Kubernetes are load-balancers that can be used to distribute load for our containers. They serve as a central reference for the PODs under it. For instance, if you have another application that talks to this application, you wouldn\'t have to point it to a POD. Actually, since PODs are ephemeral (like containers), this would be hard to manage. You can, however, point that application to the service instead, and the service would be responsible to send the request to the correct POD. Important pieces here are:</p>\n<ul>\n<li><code class="language-text">.spec.ports[0].port: 80</code>: this is the port the service is expecting requests on;</li>\n<li><code class="language-text">.spec.ports[0].targetPort: http</code>: this is the named port in our POD container the service will be sending these requests to (remember we named the container port in the Deployment template? That one);</li>\n<li><code class="language-text">.spec.selector.app: webapp-web</code>: this is the label used by the service to identify the PODs that are behind it.</li>\n</ul>\n<p>There is one more caveat here. When you use a service of type LoadBalancer in the DigitalOcean Kubernetes cluster, DigitalOcean will assign an exctual LoadBalancer (Ingress) that points to your service. This way, you will get a public IP bound to this service that you can use in your DNS config.</p>\n<p>Enough talking, let\'s apply this object to our cluster:</p>\n<pre class="language-bash">kubectl apply -f k8s/\ndeployment.apps/webapp-web-deployment created\nservice/webapp created</pre>\n<p>Great. Everything seems to be working. Let\'s wait a bit, because the service takes some time to create the LB for us. You can get the public IP either in the DigitalOcean dashboard or via CLI:</p>\n<pre class="language-bash">kubectl get svc -w\nNAME         TYPE           CLUSTER-IP       EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE\nkubernetes   ClusterIP      10.245.0.1       <span class="token operator">&lt;</span>none<span class="token operator">></span>        443/TCP        7m55s\nwebapp       LoadBalancer   10.245.144.120   <span class="token operator">&lt;</span>pending<span class="token operator">></span>     80:30808/TCP   10s\nwebapp       LoadBalancer   10.245.144.120   159.203.156.203   80:30808/TCP   28m</pre>\n<p>Now, if you open <a href="http://159.203.156.203" target="_blank" rel="nofollow noopener noreferrer">159.203.156.203</a> on your browser, you should see our application running on DigitalOcean!</p>\n<p><img class="g-image g-image--lazy g-image--loading" src="data:image/svg+xml,%3csvg fill=\'none\' viewBox=\'0 0 947 707\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3e%3cdefs%3e%3cfilter id=\'__svg-blur-30\'%3e%3cfeGaussianBlur in=\'SourceGraphic\' stdDeviation=\'40\'/%3e%3c/filter%3e%3c/defs%3e%3cimage x=\'0\' y=\'0\' filter=\'url(%23__svg-blur-30)\' width=\'947\' height=\'707\' xlink:href=\'data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAwCAYAAAChS3wfAAAACXBIWXMAAAsSAAALEgHS3X78AAAIlklEQVRo3uWZaVBUVxbH34d8mA8pMxqdzEyMk5kqQaChgV6FZqcBRdTIpqgwkITNDVwYBJXEKFqJsokgqIgaWiBsDd1Nd9N0I5sLKMpmHPWjVSPjroxG0P%2bc9xoSKhWnpmqm0Jl3q3517z3vvn73/M%2b5974HzP4vBMhKc8L2VCF2bGNxQuY2ATK2LUBGmi0yiR3UziLb7jRX7EmTIHubDN9skSI/RYKiFDmObXLDiQ0KnE5WoCLeE6pPvVAZ54OqGCUqVwehZmUwGsKXQvPJCmiXhEG3JBzNwSuhWxQJXRDVAaug9Y%2bAxpvs8nDoXQlBGAyCcBhFETCKCadItNhFwSSIgVn6OTo91qFU8Qm8pfMQrpiLQJePEOP%2bO0SJ52C5wxzEedhQ3wZJsg9QGPlHFGUE4FhoGGok4ajwDcfJkDA0RoaC2bfLAcFBIohFMkjEIshlMkglEsikUq6ebLstXAh3Nze4L5zAzQprXyiXQyaRwtXZGWJXV0hEYkL0i4hfYxO/5tq/%2bg1XkQtE9DypWEw2MbXJ5iKCiJCIJVxfxvokpflMjBPRfZ5iZ8hchEjydQOzd4c9fD0d4OXli/Tt6QhevBjR0bGICAtFZEQEIiIisSYqCgp3d8hkcsjlPyEjsRQKBZRKJYROTgjw94cb2R3s7OAkEMDRwYGrpxOh49S%2bA1yEQgqMCxypH%2bjni3kLHFHr9wdU%2b87DCrkYTPbOBVD6OsHNzYOcDSchPBEUtAiBAQHkmD8ClAHw8faGVCrh1BOzanOIuD6LO4nj6uJCSluzwDoRRw5WBIG9/RvFztaWAuQIAQVG4ChEqNgeS0V2iFbIKAMybRAU4AJ//yB4e3mREG7w8PDgIruYssGfoqqqrEJLq5nDaLLWJrOFq7vOnYdWp0dzsx7aZgOMLSbojS0wUN2sN6KjqxvnLlxE9/kL0w47t55Ll1FTV89laUpKChdYN09vuCg8Ee/lDmZPxnx4Kmwp8n7ktDscKWpSiiSb4suWLUNgYCAu9F7G9zdu4frNWxgcvo5r129giGD7D548Rf/gMC71XsLF3j4MDg3jcl8/LvRcpof34fbfRnD/8RPcffgI96aZuw8e4vHoP2h%2bQ/CmLN63bx%2b8qJZRBjvQko1dKAWTmfohtqSuQUnJcRQXF6GwsBBFRdY6NzcXeXl5UKlUaGxqQkODGmq1Gg1TqCN1GxsbuetsrWbbkzXZ6hsauDF19W%2bAujpujuXlJ5GTk4ODBw9y/uSRX7mFh5EZuhxMauIs1NcU48H9R/jrjZt49fIlRkZG8OzZc/y/l9ItG0mApPdRXZGL4sNF2LQlDW1mE3LzC7A5ZSMqK89wypks7dwN4%2bPjeEkC/S/Czn2SsRcvOH%2bKU5PBbE6aiSpVPmd49OgRnj9/hqdPR3H//n08efKE2k%2b5bJj6Y69evfrFh7B2lsky1TbZZsvUMdNduPnQXNhyZPM6EiB%2bDiorCv7bjyGHX712Am%2byTBWgfN9eWgJ/novqbwswdO177ijr6bkIs8WCwcEB9PVdQXdXJ9rOdsCg1%2bPqwAC6u%2blY6%2b6CmY5Bo0GPbjpqOmlMF9Hb2wOtRkOnwSWYTK1os5jR09sLi7kVTRotBuiEmMyMNyrARBBO5eRSBqz%2bLapOH%2bIMd%2b/%2bHY8fP%2bbSn019FnYZ3Lt3D7du3uSWBrtMRsk%2bMnIHd%2b7c4a6xsPeMjk5cp6NndPQpHj588KPt9u3buEOb69u0BIqzdoHZGDYTZ04WTOsE3pYlkPfFTjDrl88gAayb4PjY2I8p8nOmbmj/CW9TBpTn7wazIeTXUJVPCDA%2b9sYjND17gFWAymP7aRMMngXVCb4JYPWxvrocTFrgTKjK%2bCmAurYSTLrfDFSU5fJTgOrTYDJ83oXqOL8EwISPTTUVYLJ838UZvmXAxCmQk5UGZrfyPVSW5fFSgPzsHWD2BM1C9YkCXi4Bbb0KTHbAbNSUWQV4ybNN8DsKPLNf%2bQFqjx/ilwCT3wJ76HP4a5/fo/ZYIc8EGOfa32xfA%2baA4iPU8VSArzOiweTL/oT6o0UTAozzQoCXUwU44mwDdUkxrwSYzIADmXFgTtgIoCku4ZkA1k3w4M54MN/OdYb2UKlVgDGeCbArEcx3M0TQ5fBTgG/YDGhkJGg%2bwFcBEsBoWAFy%2bSnAgV1JJMCvxNAX8FOAw19SBjTNFvFWgONfxYJp%2bI0rmnkngPU94GjWajBVc52gKyjhpQCH0iPBqOY7QnuYby9CVgG%2bXBcK5rQ9%2byZ4hJffAikxy%2bhV2MkOTcX8%2bhZg/WRL/KolYI4KbaE%2bUsRLAT5fSQKUUgY08FSARDYDjgnteZsB61eHgCkTkwAlhznD2A/Pub8KTWV87AXGpsD%2bB5n96/H4z8ZxjP27jP/E%2bPQz9uIHzt%2btsbQJHpXNh%2bZUGfhY9qauBVPpJ4QqfQP6jA3o1Vagz6DCVVMlhi3VGDCp0KEuQ31FKarKS1B3qhSGmhNo11TggqEKl4w1uGyowxV9Pfp1agxqmzCk1WBIo8FgUxPRiAE1Uc/WZGvUkk1HtQ5DBNfWEoZmDJmMGDa3YrjNgmtn23Ct4yyGO9sICwY7TBhoM6DfTNA4jha23YL%2b1tYJzBhotUzBTNetXDW1Ei24wmJsJh916LeYUbE1GUxnhA/0oULUhn4M3dp5qI16H0eWvYNsPwbrXRmEfMhg0WwGMTbvYKvyPexf8zEKY%2bfjeKwtKuKcUBMjhnqVHMZQb5xdGojOxYvRFRSMdqUSFl9fmGTeaHH2Qas8AGavYLQpQtAuX4oO7xVoDwlFe1Qk2uOj0bkxHue3pqAn/S/oydyOnl0ZuPjVDpzLzkTn3q0w05ebMS0Ohk2x0CfFQE/3GBKon5gAY3IyjEnrYEzcQGyidgqHIXEj9AkboEtIhjYhHpr4z9D4WTTUn65FQ9wqdGxOxD8B2JFm0VSlqF0AAAAASUVORK5CYII=\' /%3e%3c/svg%3e" width="947" alt="Application running on Digital Ocean" data-srcset="/assets/static/image-04.82a2fbd.1c0ae17.png 480w, /assets/static/image-04.8426ab8.1c0ae17.png 947w" data-sizes="(max-width: 947px) 100vw, 947px" data-src="/assets/static/image-04.8426ab8.1c0ae17.png"><noscript><img class="g-image g-image--lazy g-image--loaded" src="/assets/static/image-04.8426ab8.1c0ae17.png" width="947" alt="Application running on Digital Ocean"></noscript></p>\n<p>If you refresh, you can see the hostname changed!</p>\n<p><img class="g-image g-image--lazy g-image--loading" src="data:image/svg+xml,%3csvg fill=\'none\' viewBox=\'0 0 939 705\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3e%3cdefs%3e%3cfilter id=\'__svg-blur-37\'%3e%3cfeGaussianBlur in=\'SourceGraphic\' stdDeviation=\'40\'/%3e%3c/filter%3e%3c/defs%3e%3cimage x=\'0\' y=\'0\' filter=\'url(%23__svg-blur-37)\' width=\'939\' height=\'705\' xlink:href=\'data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAwCAYAAAChS3wfAAAACXBIWXMAAAsSAAALEgHS3X78AAAIaElEQVRo3uVaaVBU2RV%2bP5Mf8ytlquJUtoqEhqabvWmapqGbZtOINo1bQEURZBFkC9IzGR1KTaSSyqg1momMKIiA0DSy9sbaLDI6BkFlUjXITBKdJFYlyo5sX859NI4mlUpSpdHMe1Vf3fPuPXc53z3n3PdePe74Ox4w5EhRcFAMQ64Yb%2bWJUZgnwqE8FxTmu8CQtw5v5f4Qh/M8UJTvjaP5fjie649fZPviZJYvzmYFoCQzEKXpCpSnKHApSYnLe4JRlahGVbwWVdsjUbtlPa7GxqBpow7N0bFoWR%2bHluitaI4khG9DS9hWNKrj0KTUo9WfICW4x8LioYfFJw4W7zhYxVthc90Bu2Q32mT70KNMw2G5GsGytdDL1yLC803sDfom9J7fgE68BkkqV/zY/7vIVqzB2YR1OG2IxoVwHWpkcTiv1qOU1tK6Qw8uP9MDfj7ekMvlUATK4e/nB5m/Pw8mM8gDAv4F5HwZIJPBx8sLnhIpvKSe8Pb87%2bDlxHP10n/fRyqV0HzSlblJ35NkqQetQcJ0Vtbj6%2b1JkNJ4TPaGh0SC7X4iaLzcURCuBJedJqZOEqSmpuJAZib0sXFI3rsPCQkJ2L1rN/Yk7oFeHwtv6iwjQ/0ZMU74%2bvpCrVZDFayCRCzG%2bqgouItEcHN15cuXDbHIDWI3txXZTcTLK2BtKzpSMniFCG9oNRq4uIrw8frvoDjo%2b0hUycHlpLvDjwxRqVTQkEJQUBBCQ0KgVCoRHBwMJd1HRkYiPDwcERERznJF1mq1PKKio6ENC%2bMJ0ISGkqxBGI0VRuSE0rgvCyH/AdRki5%2bPD3mMlDbJHT4ka/08IffxwkF1IHlAqggKhQI6nQ6BgYH8jjLjY2JieMMLDhXi9t1PMHT7Lm4N38adkd/hNmH47gg%2bHfsMo599jv7%2ba7g5OISe3gFqH0H/wHXc%2bPgmbty8hT88%2bMKJB8/I/ws8wOd/vI%2bHf/0b6uqvYuPGjSguLkZoaAhC1BrIgpTIVweBy0pxgSfFE9tRVjLX9qKYYt7AXD49IwP9H91Ab/8AOrsd6O7pRUd3D9o7u3H95m8xOHwH9rY2dHR1w2xpQ9%2b1azBb7bDZ26nOQWR9QgSOvBIM3bnLb9KFsnLew3Nycviwlfn7wYNszVUpKATSRCgrK0MbGWGzWWGxWNDR0cGXVquNL7u7utDT04Pe3l7a5V6%2bZHA4iJDubvT29fH3fVQ6SK/Pec/QRe2vEmx9zc3NaGxshMlk4mWz2QwjecWxTRvAHcqWYuTOMC22D4O3hjAzPcUbMTc7g0ePHuEvDx/iq3gtEU7u3ArOkOsFR2cbTpwoxrkPSzE4eBMGgwEV5RdRWVWN86Wl%2bP39L/hOi4uLWFpa%2br8DW/dTLCyQJct4PDmF93ZtAZd3wA33Rkd5A588eUJNwML8PC8vkPLqIC/qWl5efqU7vzr/xMwsTu5mBKR7YJQIYPXMYMYSU2JGLy8vOUlY5ttZ2yopjMlnCWJtc3NzPHEr5Rxfx%2b6np2ewyI%2b3/MpJWJ17fGoaJYUF9CS43xe3h4fQ2tICB%2bWBnu5OXBsYoGPtFu4MDaKjcyWJsMQ4NDxMCa4H1yjTNzU1obOjHX39/Whvb8f1Gzf4hNNqtlD7AGwWM50IA3DQeCy/sCOU5ZTXhoCJCZQe%2bxm43D1SjI2NPQ2BeQYKgdXdXlhYxAQpj4%2bP83XzzvCYmprC7OwsD7bjq33mqQ%2bbhPV94qxjF9NbcMqvAwGPJydxmo5FLjvBDWP3xl7qwp4d93XJAZPT0ziWlUYPQjtcn3rAkjNOXyZeFw%2bYpLz0wfFscJnbRM8R8FW/nobAxBQqzxjIA7bQMXhPgAQ8Hkd99TnKAbEiIuCeAAl4jEZjJb0LbHIRKAHjaLhykY7BmB/g3pjwCHhEHtBivASuYJMwCZigd4Higgx6GdIJMwQm6VG4KDcZ3E/1dAoI8BhkIWCurwB3RCcW5jE4PoHaD38JrmizRJAEjE9O4/2348Ed3eglSAImp2ZRlBYG7th6H8EScCQ9HNyJCJkgkyAj4HAaEfArjUKQL0OTUzMoyogG975CJUgCJoiAo1mbwf3GW/30g4iwCJjG0YOx4M67hAmSABYC72bpwJWv1QqWgCOMgEtvhgv0FKAkeFAPrsJFK1gCTuQwAtzDBHsMnv3JBsoBYmESMM4IyNXQKSANFWQSfDw5i5MZSnAl/iGCJeDt%2bABwH7AnQQESMDUzh8QoH3BngpWCJGB69gl0IRJwp0ICBflNcIYIiAkmAt5TKQRJAO8BKg9wJ0OCBEvAllDygNNhQRgd/ZSvXFyYxxL7D%2bgZLC4u/AMW/0nnhWNp9V%2bkxS/xgsZmNrB/hNiDUGKEN3lApBz3//RnCO1iNORsCwb36ygZKs6cgtlYiZaaMliM5bDXX0ZHQyVspnLUV51HxcUSlJ0vweULJTBevoCGmnK0GCvQSn3MtZWw1FbBWlMNW82VFVxhqIaVoYrhCqzVrK7mOVgZagjGWtjqjLCbTDR3PexXr8LeUM/D1mCC9aoR1vpaWEwE0mOw8qiDlfp8ifpn4KyrM5E%2bQx3fz2yk%2bUxGNFRX40zyFnBt%2biBUb3LHlW3rYNr5PZRvX4OzsW/g59FfR7o/h%2bhvc4j6Fod48deQE7UGx%2bPX4dRuV5xLlKB8jx%2bqdspRR0y2xGphj4lG%2b4YfoS1qA6wR4TCHadEcoEGzTItWVTQsmhhYQzbBHqyDPUIP22ZCwnbYUnahPTMFXXnZcBQUwGE4BMc7heguMqDj6CHY3s1CS%2bE%2bNOYkojEjEQ37d6EheRcaU5LQmJqKprR0NKVmoGl/JpVZhIN82bj/AOlmoD4lFaaUZNQl70VtUgJq9iagLikejtw0/B1TH4kbscZvBAAAAABJRU5ErkJggg==\' /%3e%3c/svg%3e" width="939" alt="Hostname changed" data-srcset="/assets/static/image-05.82a2fbd.3f85b62.png 480w, /assets/static/image-05.60e6b07.3f85b62.png 939w" data-sizes="(max-width: 939px) 100vw, 939px" data-src="/assets/static/image-05.60e6b07.3f85b62.png"><noscript><img class="g-image g-image--lazy g-image--loaded" src="/assets/static/image-05.60e6b07.3f85b62.png" width="939" alt="Hostname changed"></noscript></p>\n<p>This is because we have 2 replicas of the POD running in the cluster, as you can see with the following command:</p>\n<pre class="language-bash">kubectl get pods\nNAME                                    READY   STATUS    RESTARTS   AGE\nwebapp-web-deployment-9d6c766c6-85vvj   1/1     Running   0          32m\nwebapp-web-deployment-9d6c766c6-bnbpj   1/1     Running   0          32m</pre>\n<p>Pretty cool, right?!</p>\n<h2 id="cleaning-up"><a href="#cleaning-up" aria-hidden="true"><span class="icon icon-link"></span></a>Cleaning up</h2>\n<p>You probably don\'t want to keep this running on your DigitalOcean account, so let\'s clean up. First of all, let\'s delete the things we create via Kubernetes:</p>\n<pre class="language-bash">kubectl delete -f k8s/\ndeployment.apps <span class="token string">"webapp-web-deployment"</span> deleted\n<span class="token function">service</span> <span class="token string">"webapp"</span> deleted</pre>\n<p>Alright, this should get rid of our PODs, deployments, replicasets, services, and, more importantly, our LoadBalancer that was assigned to the running service.</p>\n<p>Next, let\'s use terraform to delete the kubernetes cluster and running nodes for us:</p>\n<pre class="language-bash"><span class="token function">cd</span> provision/\nterraform destroy\n<span class="token punctuation">..</span>.\nPlan: 0 to add, 0 to change, 1 to destroy.\n\nDo you really want to destroy all resources?\n  Terraform will destroy all your managed infrastructure, as shown above.\n  There is no undo. Only <span class="token string">\'yes\'</span> will be accepted to confirm.\n\n  Enter a value: <span class="token function">yes</span>\n\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Destroying<span class="token punctuation">..</span>. <span class="token punctuation">[</span>id<span class="token operator">=</span>37b9cb67-d8cc-468d-a017-2102c2d87246<span class="token punctuation">]</span>\ndigitalocean_kubernetes_cluster.terraform-k8s-demo-app: Destruction complete after 1s\n\nDestroy complete<span class="token operator">!</span> Resources: 1 destroyed.</pre>\n<p>Everything was erased (it might take a few seconds for things to disapear from your Digital Ocean dashboard).</p>\n<h2 id="wrapping-up"><a href="#wrapping-up" aria-hidden="true"><span class="icon icon-link"></span></a>Wrapping up</h2>\n<p>Alright, that was a long ride. After all this, this should be your current file structure:</p>\n<pre class="language-bash">tree <span class="token keyword">.</span>\n<span class="token keyword">.</span>\n├── app\n│   ├── Dockerfile\n│   └── public\n│       └── index.php\n├── k8s\n│   └── web.yml\n└── provision\n    ├── main.tf\n    ├── terraform.tfstate\n    ├── terraform.tfstate.backup\n    └── variables.tf\n\n3 directories, 7 files</pre>\n<p>The <code class="language-text">terraform.tfstate</code> inside the <code class="language-text">provision/</code> folder is where terraform keeps your infrastructure state (ips, resources creates, things like that). When you are working on a team, you probably want that state not on your local machine, but living somewhere where your team mates can also use to manage the cluster. That can be achieved by using a share S3 bucket in your <a href="https://www.terraform.io/docs/backends/index.html" target="_blank" rel="nofollow noopener noreferrer">backend</a>. If you are using Digital Ocean, they have a service called Spaces, which can also be used instead of AWS S3, as they implement the same protocols.</p>\n<p>That\'s it for now, I hope I have sparked some interest to you on the topic. This declarative way of doing things is becoming way more common these days, and it\'s everywhere: on your frontend (<a href="https://dev.to/itsjzt/declarative-programming--react-3bh2" target="_blank" rel="nofollow noopener noreferrer">React</a> and <a href="https://vuejs.org/v2/guide/#Declarative-Rendering" target="_blank" rel="nofollow noopener noreferrer">Vue</a>), as well as in your infrastructure.</p>\n<p>This also enables a thing we are going to talk about next: <a href="https://www.weave.works/technologies/gitops/" target="_blank" rel="nofollow noopener noreferrer">GitOps</a>.</p>\n<p>See you soon!</p>\n'}}]}}}}}}]);